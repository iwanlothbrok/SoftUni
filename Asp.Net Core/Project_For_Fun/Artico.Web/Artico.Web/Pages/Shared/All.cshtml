@using Artico.Core.Extensions
@using Artico.Core.Models.Article
@model AllArticlesQueryModel

@{
	ViewData["Title"] = "All Articles";
}

<form method="get">
	<div class="row">
		<div class="form-group col-md-4">
			<div class="form-group">
				<label asp-for="Title"></label>
				<select asp-for="Title" class="form-control">
					<option value="">All</option>

					@foreach (var title in Model.Titles)
					{
						<option value="@title">@title</option>
					}
				</select>
			</div>
		</div>

		<div class="form-group col-md-4">
			<label asp-for="SearchTerm"></label>
			<input asp-for="SearchTerm" class="form-control" placeholder="Emergency news...">
		</div>

		<div class="form-group col-md-4">
			<div class="form-group">
				<label asp-for="Sorting"></label>
				<select asp-for="Sorting" class="form-control">
					<option value="0" selected>Order</option>
					<option value="1">Title</option>
					<option value="2">Job</option>
					<option value="3">Position</option>
					<option value="4">Only for users</option>
					<option value="5">Only for guests</option>
				</select>
			</div>
		</div>
	</div>
	<div class="text-center">
		<button class="btn btn-primary">Search</button>
	</div>
</form>

@{
	var previousPage = Model.CurrentPage - 1;
	if (previousPage < 1)
	{
		previousPage = 1;
	}

	var maxPage = Math.Ceiling((double)Model.TotalArticles / AllArticlesQueryModel.ArticlesPerPage);
}

<div class="row mb-5">
	<div class="col-md-6">
		<a class="btn btn-primary @(Model.CurrentPage == 1 ? "disabled" : string.Empty)"
		   asp-controller="User"
		   asp-action="All"
		   asp-route-currentPage="@previousPage"
		   asp-route-brand="@Model.Titles"
		   asp-route-searchTerm="@Model.SearchTerm"
		   asp-route-sorting="@((int)Model.Sorting)"><<</a>
	</div>

	@{
		var shouldButtonBeDisabled = Model.CurrentPage == maxPage ||
		!Model.Articles.Any();
	}

	<div class="col-md-6">
		<a class="btn btn-primary float-sm-right @(shouldButtonBeDisabled ? "disabled" : string.Empty)" style="margin-top: 10px"
		   asp-controller="User"
		   asp-action="All"
		   asp-route-currentPage="@(Model.CurrentPage + 1)"
		   asp-route-brand="@Model.Titles"
		   asp-route-searchTerm="@Model.SearchTerm"
		   asp-route-sorting="@((int)Model.Sorting)">>></a>
	</div>

</div>


<div class="row">

	@foreach (var article in Model.Articles)
	{
		<div class="col-md-4">
			<div class="card mb-3">
					<h1 class="card-title text-center">Title: @article.Title</h1>
				<p>
					<p class="card-title text-center">Body: @article.Body </p>
					<p class="card-title text-center">For: @article.Job </p>
					<p class="card-title text-center">At: @article.Position </p>
				</p>
			</div>

		@if(article.UserId == User.GetId())
		{
			<a asp-area="Admin" asp-controller="Admin" asp-action="Edit" asp-route-id="@article.Id" class="btn btn-warning accent-blue ml-3">Edit</a>
			<a asp-area="Admin" asp-controller="Admin" asp-action="Delete" asp-route-id="@article.Id" class="btn btn-danger float-right ml-3">Delete</a>
		}
		</div>			
	}
</div>

@if (Model.Articles.Count() == 0)
{
	<h1 class="text-center">There are no articles!</h1>
}
